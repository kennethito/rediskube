apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 3
  template:
    metadata:
      labels:
        app: redis
      annotations:
        prometheus.io/port: '9121'
        prometheus.io/scrape: 'true'
    spec:
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - redis
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: init-redis
        image: redis:3.2
        command: ["bash", "-c", "
          set -ex\n

          [[ -f /mnt/conf/redis.conf ]] && exit 0\n
          
          cp /mnt/config-map/shared.conf /mnt/conf/redis.conf\n

          apt update && apt install -y dnsutils\n

          masterIp=$(dig +noall +answer redis-0.redis.default.svc.cluster.local | awk '{print $NF; exit}')\n
          echo 'masterIp $masterIp'\n

          if [[ $masterIp = '' ]]; then\n
            cat /mnt/config-map/master.conf >> /mnt/conf/redis.conf\n
          else\n
            cat /mnt/config-map/slave.conf >> /mnt/conf/redis.conf\n
          fi\n
        "]
        volumeMounts: [
          {"name": "conf", "mountPath": "/mnt/conf"},
          {"name": "config-map", "mountPath": "/mnt/config-map"}
        ]
      containers:
      - name: redis
        command: ["redis-server", "/etc/redis/redis.conf"]
        image: library/redis:3.2
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - name: conf
          mountPath: /etc/redis
        resources:
          limits:
            memory: "30G"
            cpu: "1"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "/usr/local/bin/redis-cli -h $(hostname) ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
      - name: redis-exporter
        image: oliver006/redis_exporter
        resources:
          limits:
            memory: "50M"
            cpu: "250m"
        env:
          - name: REDIS_ADDR
            value: "localhost:6379"
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
      - name: config-map
        configMap:
          name: redis
      nodeSelector:
        host.role: "platform-compute"
  volumeClaimTemplates:
  - metadata:
      name: conf
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: glusterfs-storage
      resources:
        requests:
          storage: 10Mi
