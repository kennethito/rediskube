apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: redis-sentinel
spec:
  serviceName: redis-sentinel
  replicas: 3
  template:
    metadata:
      labels:
        app: redis-sentinel
    spec:
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - redis-sentinel
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: init-redis
        image: library/redis:3.2
        command: ["bash", "-c", "
          set -ex\n
          [[ -f /mnt/conf/sentinel.conf ]] && exit 0\n
          # Copy appropriate conf.d files from config-map to emptyDir.\n
          cp /mnt/config-map/sentinel.conf /mnt/conf/sentinel.conf\n
        "]
        volumeMounts: [
          {"name": "conf", "mountPath": "/mnt/conf"},
          {"name": "config-map", "mountPath": "/mnt/config-map"}
        ]
      containers:
      - name: redis-sentinel
        command: ["redis-sentinel", "/etc/redis/sentinel.conf"]
        image: library/redis:3.2
        ports:
        - name: redis-sentinel
          containerPort: 26379
        volumeMounts:
        - name: conf
          mountPath: /etc/redis
        resources:
          requests:
            cpu: "250m"
            memory: "50M"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "/usr/local/bin/redis-cli -h $(hostname) -p 26379 ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
      - name: config-map
        configMap:
          name: redis-sentinel
      nodeSelector:
        host.role: "platform-compute"
  volumeClaimTemplates:
  - metadata:
      name: conf
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: glusterfs-storage
      resources:
        requests:
          storage: 10Mi
